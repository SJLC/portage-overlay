--- fer/gnl/get_command.F.orig	2009-05-03 19:28:20.781775410 -0700
+++ fer/gnl/get_command.F	2009-05-03 19:30:26.594777461 -0700
@@ -1,4 +1,4 @@
-	SUBROUTINE GET_COMMAND( memory, called_string, status, * )
+	SUBROUTINE GET_COMMAND_OLD( memory, called_string, status, * )
 
 *  This software was developed by the Thermal Modeling and Analysis
 *  Project(TMAP) of the National Oceanographic and Atmospheric
@@ -88,6 +88,9 @@
 * *kob* 4/06 - back off my_readline call - needed for 64-bit port
 * v603 *acm* 5/07 Housekeeping: initialize arg_start and arg_end
 *                 before call to parse_command
+* sarnold 3 May 2009 - Subroutine name conflicts with internal
+*                      internal gfortran routine Use of this
+*                      routine is deprecated.
 
 #ifdef MIXING_NAG_F90_AND_C
 	USE F90_UNIX
--- fer/special/ferret_dispatch.F.orig	2009-05-03 19:31:07.748026202 -0700
+++ fer/special/ferret_dispatch.F	2009-05-03 19:15:11.794025676 -0700
@@ -200,7 +200,7 @@
 	   IF ( command(i) .EQ. 0 ) GOTO 5
  2	cmnd_buff(i:i) = CHAR( command(i) )
 
- 5	CALL GET_COMMAND( memory, cmnd_buff, status, *300 )
+ 5	CALL GET_COMMAND_OLD( memory, cmnd_buff, status, *300 )
 
 	GOTO (	 10, 20, 30, 40, 50, 60, 70, 80, 90,100,
      .		110,120,130,140,150,160,170,180,190,200,
--- fmt/src/tm_ftoc_readline.c.orig	2009-05-03 19:32:25.223775348 -0700
+++ fmt/src/tm_ftoc_readline.c	2009-05-03 19:32:46.097776036 -0700
@@ -56,7 +56,7 @@
 #include <stdlib.h>
 #include <stdio.h>
 #include <strings.h>
-#include "readline.h"
+#include <readline/readline.h>
 
 /* Easier way of handling FORTRAN calls with underscore/no underscore */
 #ifdef NO_ENTRY_NAME_UNDERSCORES
--- fmt/src/tm_make_relative_ver.c.orig	2006-09-13 13:33:26.000000000 -0700
+++ fmt/src/tm_make_relative_ver.c	2009-05-03 19:36:04.117027073 -0700
@@ -77,10 +77,10 @@
 
 {
   int i,j,int_ver, high_ver, ver_len;
-  char *temp_ver, *malloc();
+  char *temp_ver;
 
 /* allocate temporary memory */
-  temp_ver = malloc(20);
+  temp_ver = (char *)malloc(20);
 
 /* get just the numeric part of the string, ignoring all else */
   for (i=0,j=0; i<=strlen(curr_ver); i++)
--- fer/ccr/binaryRead.c.orig	2009-05-03 22:00:10.084775586 -0700
+++ fer/ccr/binaryRead.c	2009-05-03 22:05:39.676775124 -0700
@@ -132,7 +132,7 @@
   }
 }
 
-static FileInfo *createBinaryReader(char *name, int lengths[MAXDIMS],
+FileInfo *createBinaryReader(char *name, int lengths[MAXDIMS],
 			     int permutes[MAXDIMS], int skip, int swap){
   FileInfo *fi = (FileInfo *)calloc(1, sizeof(FileInfo));
   int i;
@@ -190,14 +190,14 @@
   free(theVar);
 }
 
-static void deleteBinaryReader(FileInfo *fi){
+void deleteBinaryReader(FileInfo *fi){
   free(fi->vars);
   tidyUp(fi);
   free(fi->name);
   free(fi);
 }
 
-static int addVar(FileInfo *fi, float *data, int type, int doRead){
+int addVar(FileInfo *fi, float *data, int type, int doRead){
   VarInfo *theVar = 0;
   int i;
 
@@ -361,7 +361,7 @@
   return 1;
 }
 
-static int readBinary(FileInfo *file){
+int readBinary(FileInfo *file){
 				/* Screen out zero length files */
   if (file->size == 0){
     setError("File %s is an empty file", file->name);
--- fer/ccr/resize_animation_window.c.orig	2009-05-03 22:20:24.675775626 -0700
+++ fer/ccr/resize_animation_window.c	2009-05-03 22:21:07.221776293 -0700
@@ -1,31 +1,30 @@
 /* *kob* 10/03 v553 - gcc v3.x needs wchar.h included */
 #include <wchar.h>
-#include "udposix.h"
-#include "gks_implem.h"
-#include "cgm/cgm.h"
-#include "cgm/cgm_implem.h"
-#include <stdio.h>
-#include <string.h>
-#include <stdlib.h>
-#include <time.h> 
-
-#ifdef NO_ENTRY_NAME_UNDERSCORES
-resize_animation_window (ws_id, x, y)
-#else
-resize_animation_window_ (ws_id, x, y)
-#endif
-
-Gint *ws_id;
-float *x;
-float *y;
-
-{
-  WS_STATE_ENTRY *ws;
-
-  ws  = OPEN_WSID (*ws_id);
-
-  /* 3/02 *kob* need to cast x and y for IRIX */
-  XResizeWindow (ws->dpy,ws->win,(unsigned int)x,(unsigned int)y);
-
- 
-}
+#include "gks_implem.h"
+#include "cgm/cgm.h"
+#include "cgm/cgm_implem.h"
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+#include <time.h> 
+
+#ifdef NO_ENTRY_NAME_UNDERSCORES
+resize_animation_window (ws_id, x, y)
+#else
+resize_animation_window_ (ws_id, x, y)
+#endif
+
+Gint *ws_id;
+float *x;
+float *y;
+
+{
+  WS_STATE_ENTRY *ws;
+
+  ws  = OPEN_WSID (*ws_id);
+
+  /* 3/02 *kob* need to cast x and y for IRIX */
+  XResizeWindow (ws->dpy,ws->win,(unsigned int)x,(unsigned int)y);
+
+ 
+}
--- ppl/tmapadds/its_gksm.c.orig	2009-05-03 22:32:38.107027395 -0700
+++ ppl/tmapadds/its_gksm.c	2009-05-03 22:33:26.136473720 -0700
@@ -57,7 +57,6 @@
 /* *kob* 10/03 v553 - gcc v3.x needs wchar.h included */
 #include <wchar.h>
 
-#include "udposix.h"
 #include "gks_implem.h"
 
 
--- ppl/tmapadds/Makefile.orig	2009-05-03 22:33:42.367776026 -0700
+++ ppl/tmapadds/Makefile	2009-05-03 22:34:42.081243564 -0700
@@ -21,6 +21,7 @@
 # non-default suffix rules
 #
 
+CFLAGS += $(GKS_INCLUDES)
 
 #
 # Macros
--- ppl/tmapadds/set_background.c.orig	2009-05-03 22:37:21.490775495 -0700
+++ ppl/tmapadds/set_background.c	2009-05-03 22:38:22.933776359 -0700
@@ -50,7 +50,6 @@
 
 /* *kob* 10/03 v553 - gcc v3.x needs wchar.h included */
 #include <wchar.h>
-#include "udposix.h"
 #include "gks_implem.h"
 #include <stdio.h>
 #include <string.h>
--- ppl/tmapadds/wait_on_resize.c.orig	2009-05-03 22:37:37.958775569 -0700
+++ ppl/tmapadds/wait_on_resize.c	2009-05-03 22:37:59.947778860 -0700
@@ -47,7 +47,6 @@
 
 /* *kob* 10/03 v553 - gcc v3.x needs wchar.h included */
 #include <wchar.h>
-#include "udposix.h"
 #include "gks_implem.h"
 #include <stdio.h>
 #include <string.h>
--- ppl/tmapadds/resize_xgks_window.c.orig	2009-05-03 22:36:30.707039160 -0700
+++ ppl/tmapadds/resize_xgks_window.c	2009-05-03 22:36:53.668026875 -0700
@@ -59,7 +59,6 @@
 
 /* *kob* 10/03 v553 - gcc v3.x needs wchar.h included */
 #include <wchar.h>
-#include "udposix.h"
 #include "gks_implem.h"
 #include "cgm/cgm.h"
 #include "cgm/cgm_implem.h"
--- fer/plt/Makefile.orig	2009-05-03 23:23:24.905775664 -0700
+++ fer/plt/Makefile	2009-05-03 23:24:59.013776062 -0700
@@ -16,6 +16,8 @@
 include ./SOURCE_FILES
 include ./LIB_NAME
 
+FFLAGS += -fno-range-check
+
 #
 # Macros
 #
--- fer/ino/equal_delimit.F.orig	2009-05-09 11:03:24.380557022 -0700
+++ fer/ino/equal_delimit.F	2009-05-09 11:50:46.789388480 -0700
@@ -113,7 +113,7 @@
      .	     .AND. buff(1:1).LE.'9'
      .	     .AND. pos.GT.2 ) THEN
 	    buff1 = buff(:pos-1)
-	    READ(buff1,'(I)',ERR=5100) ic
+	    READ(buff1,'(A)',ERR=5100) ic
 	    IF (ic.GT.127) GOTO 5100
 	    outstring(n:n) = CHAR(ic)  ! any decimal value
 	  ELSEIF (pos.GT.2) THEN
--- fer/common/xplot_setup.cmn.orig	2009-05-09 12:18:20.980388512 -0700
+++ fer/common/xplot_setup.cmn	2009-05-09 12:39:56.882385558 -0700
@@ -24,6 +24,7 @@
      .		ovkey_ll_full,
      .          animate,
      .		first_frame
+
 	INTEGER	nvect_on,
      .		ncont_on,
      .		nlabs_on,
@@ -116,6 +117,7 @@
      .		xwhitehi,
      .		ywhitehi,
      .		ppl_buff,
+     .		transparent,
      .		window_title
 
 * equivalences
--- fer/common/xplot_state.cmn.orig	2009-05-09 12:51:29.003387507 -0700
+++ fer/common/xplot_state.cmn	2009-05-09 12:52:09.519738613 -0700
@@ -57,7 +57,6 @@
      .			ppl_interrupted,
      .			curr_seg_name,
      .			saved_calendar_id,
-     .			transparent,
      .
      .			wn_open	 ( max_windows ),
      .			wn_active( max_windows ),
--- ppl/plotlib/numcde.F.orig	2009-05-09 13:12:54.786136178 -0700
+++ ppl/plotlib/numcde.F	2009-05-09 14:07:30.214137963 -0700
@@ -70,7 +70,7 @@
 c
 	CHARACTER*(*) FRMTZ
 	CHARACTER*20 FRMT,STR,TEMP,STR_DMS
-        INTEGER TM_LENSTR1, dms, imin, isec, dot
+        INTEGER TM_LENSTR1, dms, imin, isec, dot, deg
         REAL val, frac, minutes, seconds
 C
 	FRMT=FRMTZ
--- ppl/plotlib/numcde_off.F.orig	2009-05-09 14:08:12.246162751 -0700
+++ ppl/plotlib/numcde_off.F	2009-05-09 14:09:16.957387696 -0700
@@ -55,7 +55,7 @@
 c
 	CHARACTER*(*) FRMTZ
 	CHARACTER*20 FRMT,STR,TEMP,STR_DMS
-        INTEGER TM_LENSTR1, dms, imin, isec, dot
+        INTEGER TM_LENSTR1, dms, imin, isec, dot, deg
         REAL frac, minutes, seconds, off
         REAL*8 val, x
 C
--- fmt/src/NCF_Util.c.orig	2009-05-10 15:00:24.426333415 -0700
+++ fmt/src/NCF_Util.c	2009-05-10 15:00:24.395334189 -0700
@@ -85,10 +85,10 @@
 #include <sys/types.h>	        /* required for some of our prototypes */
 #include <sys/stat.h>
 #include <sys/errno.h>
+#include <list.h>
 
 #include "netcdf.h"
 #include "nc.h"
-#include "list.h"  /* locally added list library */
 #include "NCF_Util.h"
 
 /* ................ Global Variables ................ */
--- fer/gnl/ctrl_c.F.orig	2003-02-19 09:01:03.000000000 -0800
+++ fer/gnl/ctrl_c.F	2009-05-10 17:44:12.041106698 -0700
@@ -103,10 +103,11 @@
 !D     GOTO 888
 * use newly named condition tests *kob* 1/96
 #ifdef call_handler_each_time
+#  ifdef G77_SIGNAL
+      old_handler = SIGNAL( 2, CTRLC_AST)    !! GNU Fortran needs this
+#  endif
 #  ifdef NEED_SIGNAL_UNDERSCORE
       old_handler = SIGNAL_( 2, CTRLC_AST, -1 )    ! on AIX call every time
-#  elif defined G77_SIGNAL
-      old_handler = SIGNAL( 2, CTRLC_AST)    !! on solaris call every time
 #  else
       old_handler = SIGNAL( 2, CTRLC_AST, -1 )    ! on solaris call every time
 
