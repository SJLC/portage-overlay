diff --git a/src/gallium/auxiliary/util/u_index_modify.c b/src/gallium/auxiliary/util/u_index_modify.c
index d0a28b5..d13d779 100644
--- a/src/gallium/auxiliary/util/u_index_modify.c
+++ b/src/gallium/auxiliary/util/u_index_modify.c
@@ -35,7 +35,7 @@ void util_shorten_ubyte_elts_to_userptr(struct pipe_context *context,
 {
     struct pipe_transfer *src_transfer;
     unsigned char *in_map;
-    unsigned short *out_map = out;
+    unsigned int *out_map = out;
     unsigned i;
 
     in_map = pipe_buffer_map(context, elts,
@@ -44,12 +44,15 @@ void util_shorten_ubyte_elts_to_userptr(struct pipe_context *context,
                              &src_transfer);
     in_map += start;
 
-    for (i = 0; i < count; i++) {
-        *out_map = (unsigned short)(*in_map + index_bias);
-        in_map++;
+    for (i = 0; i < (count - 1); i += 2) {
+        *out_map = (in_map[0] + index_bias) | ((unsigned int)(in_map[1] + index_bias)) << 16;
+        in_map += 2;
         out_map++;
     }
 
+    if (i < count)
+        *out_map = in_map[0] + index_bias;
+
     pipe_buffer_unmap(context, src_transfer);
 }
 
@@ -66,7 +69,7 @@ void util_shorten_ubyte_elts(struct pipe_context *context,
     new_elts = pipe_buffer_create(context->screen,
                                   PIPE_BIND_INDEX_BUFFER,
                                   PIPE_USAGE_STATIC,
-                                  2 * count);
+                                  2 * align(count, 2));
 
     out_map = pipe_buffer_map(context, new_elts, PIPE_TRANSFER_WRITE,
                               &dst_transfer);
@@ -88,7 +91,7 @@ void util_rebuild_ushort_elts_to_userptr(struct pipe_context *context,
 {
     struct pipe_transfer *in_transfer = NULL;
     unsigned short *in_map;
-    unsigned short *out_map = out;
+    unsigned int *out_map = out;
     unsigned i;
 
     in_map = pipe_buffer_map(context, elts,
@@ -97,12 +100,15 @@ void util_rebuild_ushort_elts_to_userptr(struct pipe_context *context,
                              &in_transfer);
     in_map += start;
 
-    for (i = 0; i < count; i++) {
-        *out_map = (unsigned short)(*in_map + index_bias);
-        in_map++;
+    for (i = 0; i < (count - 1); i += 2) {
+        *out_map = (in_map[0] + index_bias) | ((unsigned int)(in_map[1] + index_bias)) << 16;
+        in_map += 2;
         out_map++;
     }
 
+    if (i < count)
+        *out_map = in_map[0] + index_bias;
+
     pipe_buffer_unmap(context, in_transfer);
 }
 
@@ -118,7 +124,7 @@ void util_rebuild_ushort_elts(struct pipe_context *context,
     new_elts = pipe_buffer_create(context->screen,
                                   PIPE_BIND_INDEX_BUFFER,
                                   PIPE_USAGE_STATIC,
-                                  2 * count);
+                                  2 * align(count, 2));
 
     out_map = pipe_buffer_map(context, new_elts,
                               PIPE_TRANSFER_WRITE, &out_transfer);

